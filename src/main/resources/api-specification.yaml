openapi: 3.0.3
info:
  title: magacin-VP application
  description: 'OpenAPI specification for magacin-VP application'
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
tags:
  - name: authentication
    description: User authentication
  - name: category
    description: Item categorization
  - name: warehouse
    description: Warehouse controls
  - name: manufacturer
    description: Manufacturer controls
  - name: item
    description: Item controls

paths:
  /api/login:
    post:
      tags:
        - authentication
      summary: Login user.
      description: Authenticate user from username and password.
      operationId: login
      requestBody:
        description: Authenticate user from username and password.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestBody'
        required: true
      responses:
        201:
          description: User successfully authenticated.

  /api/categories:
    get:
      tags:
        - category
      summary: Get all categories.
      description: List all categories that exist on the system.
      operationId: getCategories
      responses:
        200:
          description: List of all existing categories on the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesResponseBody'
    post:
      tags:
        - category
      summary: Create a new category.
      operationId: createCategory
      requestBody:
        description: Request body that includes the name of the manufacturer to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryRequestBody'
      responses:
        201:
          description: The manufacturer was successfully created.
  /api/categories/{categoryId}:
    parameters:
      - name: categoryId
        in: path
        description: The unique id of the category.
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - category
      summary: Get category by category id.
      operationId: getCategoryById
      responses:
        200:
          description: The requested category.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResource'
    delete:
      tags:
        - category
      summary: Delete a category by using it's unique id.
      operationId: deleteCategoryById
      responses:
        204:
          description: The category was successfully deleted.

  /api/manufacturers:
    get:
      tags:
        - manufacturer
      summary: Get all manufacturers.
      description: List all manufacturers that exist on the system.
      operationId: getManufacturers
      responses:
        200:
          description: List of all existing manufacturers on the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerResponseBody'
    post:
      tags:
        - manufacturer
      summary: Create a new manufacturer.
      operationId: createManufacturer
      requestBody:
        description: Request body that includes the name of the manufacturer to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateManufacturerRequestBody'
      responses:
        201:
          description: The category was successfully created.
  /api/manufacturers/{manufacturerId}:
    parameters:
      - name: manufacturerId
        in: path
        description: The unique id of the manufacturer.
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - manufacturer
      summary: Get category by manufacturer id.
      operationId: getManufacturerById
      responses:
        200:
          description: The requested manufacturer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerResource'
    delete:
      tags:
        - manufacturer
      summary: Delete a manufacturer by using it's unique id.
      operationId: deleteManufacturerById
      responses:
        204:
          description: The manufacturer was successfully deleted.

  /api/warehouses:
    get:
      tags:
        - warehouse
      summary: Get all warehouses.
      description: List all warehouses that exist on the system.
      operationId: getWarehouses
      responses:
        200:
          description: List of all existing warehouses on the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehousesResponseBody'
    post:
      tags:
        - warehouse
      summary: Create a new warehouse.
      operationId: createWarehouse
      requestBody:
        description: Request body of the warehouse to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWarehouseRequestBody'
      responses:
        201:
          description: The warehouse was successfully created.
  /api/warehouses/{warehouseId}:
    parameters:
      - name: warehouseId
        in: path
        description: The unique id of the warehouse.
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - warehouse
      summary: Get warehouse by warehouse id.
      operationId: getWarehouseById
      responses:
        200:
          description: The requested warehouse.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseResource'
    delete:
      tags:
        - warehouse
      summary: Delete a warehouse by using it's unique id.
      operationId: deleteWarehouseById
      responses:
        204:
          description: The warehouse was successfully deleted.
  /api/items:
    get:
      parameters:
        - name: categoryId
          in: query
          description: Filter by category.
          required: false
          schema:
            type: integer
            format: int64
        - name: manufacturerId
          in: query
          description: Filter by manufacturer.
          required: false
          schema:
            type: integer
            format: int64
        - name: availability
          in: query
          description: Filter by availability.
          required: false
          schema:
            type: boolean
      tags:
        - item
      summary: Get list of all available items on the system.
      description: | 
        Get list of all available items on the system. 
        The items can be filtered by their category, manufacturer and availability.
      operationId: getItems
      responses:
        200:
          description: All available items on the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResponseBody'
    post:
      tags:
        - item
      summary: Create new item in the system.
      description: Create new item in the system.
      operationId: createItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItemRequestBody'
      responses:
        201:
          description: The item was successfully created.
    put:
      tags:
        - item
      summary: Update an item in the system.
      description: Update item in the system.
      operationId: updateItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemRequestBody'
      responses:
        201:
          description: The item was successfully updated.
  /api/items/{itemId}:
    parameters:
      - name: itemId
        in: path
        description: The unique identifier of the requested item.
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - item
      summary: Get item by its unique identifier.
      description: Get one single item by its unique identifier.
      operationId: getItem
      responses:
        200:
          description: Requested item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResource'
    delete:
      tags:
        - item
      summary: Delete an item by its unique identifier.
      description: Delete an item by its unique identifier.
      operationId: deleteItem
      responses:
        204:
          description: The item was successfully deleted.
  /api/items/search:
    parameters:
      - name: query
        in: query
        description: The search query.
        required: true
        schema:
          type: string
    get:
      tags:
        - item
      summary: Search items by their name.
      description: Search through all items on their system by their name.
      operationId: searchItems
      responses:
        200:
          description: Collection of all items that match the search query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsResponseBody'

components:
  schemas:
    LoginRequestBody:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: The username entered by the user
        password:
          type: string
          description: The password entered by the user
    CategoryResource:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the category
        name:
          type: string
          description: Used for displaying the category
    CreateCategoryRequestBody:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the category to be created.
    CategoriesResponseBody:
      type: object
      required:
        - categories
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryResource'

    WarehouseResource:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the warehouse.
        name:
          type: string
          description: Used for displaying the warehouse.
        latitude:
          type: number
          description: The latitude of the location of the warehouse. Used for displaying the warehouse on a map
        longitude:
          type: number
          description: The longitude of the location of the warehouse. Used for displaying the warehouse on a map
    WarehousesResponseBody:
      type: object
      required:
        - warehouses
      properties:
        warehouses:
          type: array
          items:
            $ref: '#/components/schemas/WarehouseResource'
    CreateWarehouseRequestBody:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the warehouse to be created.
        latitude:
          type: number
          description: The latitude of the location of the warehouse.
        longitude:
          type: number
          description: The longitude of the location of the warehouse.

    ManufacturerResource:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the manufacturer.
        name:
          type: string
          description: Used for displaying the manufacturer.
    ManufacturerResponseBody:
      type: object
      required:
        - manufacturers
      properties:
        manufacturers:
          type: array
          items:
            $ref: '#/components/schemas/ManufacturerResource'
    CreateManufacturerRequestBody:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the manufacturer to be created.
    ItemResource:
      type: object
      required:
        - id
        - name
        - description
        - price
        - available
        - availability
        - quantity
        - category
        - manufacturer
      properties:
        id:
          type: number
          description: Unique identifier for the item.
          format: int64
        name:
          type: string
          description: The name of the item.
        description:
          type: string
          description: The description for the item.
        price:
          type: number
          format: double
          description: The price of the item.
        available:
          type: boolean
          description: Whether the item is available and in stock.
        quantity:
          type: number
          format: int32
          description: Total quantity of the item in all warehouses.
        category:
          $ref: '#/components/schemas/CategoryResource'
        manufacturer:
          $ref: '#/components/schemas/ManufacturerResource'
        availableInWarehouses:
          type: array
          description: List of warehouses where the item is available in.
          items:
            $ref: '#/components/schemas/WarehouseResource'
    ItemsResponseBody:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemResource'
    CreateItemRequestBody:
      type: object
      required:
        - name
        - description
        - price
        - categoryId
        - manufacturerId
      properties:
        name:
          type: string
          description: The name of the item.
        description:
          type: string
          description: The description for the item.
        price:
          type: number
          format: double
          description: The price of the item.
        categoryId:
          type: integer
          format: int64
          description: The unique identifier of the category of the item.
        manufacturerId:
          type: integer
          format: int64
          description: The unique identifier of the manufacturer of the item.
    UpdateItemRequestBody:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateItemRequestBody'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: The id of the item to be updated.